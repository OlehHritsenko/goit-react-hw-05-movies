{"version":3,"file":"static/js/304.b964ddd2.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/base/Section.styled.js","helpers/Loader/NotiflixLoading.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/ApiService.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: stretch;\n  gap: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Item = styled.li`\n  padding-bottom: 5px;\n  background-color: #020024;\n  color: #fff;\n  border: 3px solid rgba(132, 132, 132, 0.5);\n  border-radius: 4px;\n  box-shadow: 0px 7px 10px -2px rgba(132, 132, 132, 0.5);\n  :hover {\n    box-shadow: 0 4px 10px #000;\n    scale: 1.01;\n  }\n`;\n\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  background-color: darkgray;\n  @media screen and (min-width: 320px) {\n    width: 240px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 170px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  text-decoration: none;\n  color: inherit;\n  :hover,\n  :focus {\n    color: #3f93b9;\n    text-decoration: underline;\n  }\n`;\n\nconst Name = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n  @media screen and (min-width: 320px) {\n    width: 240px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 170px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n  }\n`;\n\nexport { List, Item, Image, StyledLink, Name };","import { useLocation } from 'react-router-dom';\nimport { List, Item, Image, StyledLink, Name } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title }) => (\n        <Item key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj'\n              }\n              alt={title}\n              width=\"100\"\n              height=\"160\"\n              loading=\"lazy\"\n            />\n\n            <Name>{title}</Name>\n          </StyledLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px 0;\n`;\n\nexport { Section };","import { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nexport default class NotiflixLoading {\n  onLoading() {\n    return Loading.circle('Loading...', {\n      backgroundColor: 'rgba(0,0,0,0.5)',\n      svgSize: '160px',\n      svgColor: '#0f5271',\n      messageFontSize: '20px',\n    });\n  }\n\n  onLoaded() {\n    return Loading.remove();\n  }\n}\n","import styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 30px;\n  font-weight: 500;\n  text-align: center;\n  text-transform: uppercase;\n  margin-top: 20px;\n  margin-bottom: 50px;\n  color: rgb(0, 0, 0);\n`;\n\nexport { Title };","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchData } from 'services/ApiService';\nimport { Container } from 'components/base/Container.styled';\nimport { Section } from 'components/base/Section.styled';\nimport { Title } from './Home.styled';\nimport NotiflixLoading from '../../helpers/Loader/NotiflixLoading';\nconst loader = new NotiflixLoading();\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const pathParams = 'trending/movie/day';\n\n  useEffect(() => {\n    async function getData() {\n      setIsLoading(true);\n      try {\n        const { data } = await fetchData(pathParams);\n        setTrends(data.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getData();\n  }, []);\n\n  if (!trends) {\n    return null;\n  }\n\n  return (\n    <main>\n      <Container>\n        {isLoading ? loader.onLoading() : loader.onLoaded()}\n        <Section>\n          {!error ? (\n            <Title> Trending today</Title>\n          ) : (\n            <Title> Whoops, something went wrong</Title>\n          )}\n          {!error && trends.length > 0 && <MoviesList movies={trends} />}\n        </Section>\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3cfb780db79e54922c50ea8f26b92bbe';\n\n// const pathParams = [\n//   { trend: 'trending/movie/day' },\n//   { search: 'search/movie' },\n//   { movieDetails: `movie/${movieId}` },\n//   { cast: `movie/${movieId}/credits` },\n//   { reviews: `movie/${movieId}/reviews` },\n// ];\n\nasync function fetchData(pathParams) {\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`,\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\nasync function fetchDataByID(id, path) {\n  const pathURL = path ? `/${path}` : '';\n  const pathParams = `movie/${id}${pathURL}`;\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`,\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\nfetchData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  path: PropTypes.string,\n};\n\nexport { fetchData, fetchDataByID };\n"],"names":["List","styled","Item","Image","StyledLink","Link","Name","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","width","height","loading","Section","NotiflixLoading","Loading","backgroundColor","svgSize","svgColor","messageFontSize","Title","loader","useState","trends","setTrends","error","setError","isLoading","setIsLoading","pathParams","useEffect","fetchData","data","results","getData","onLoading","onLoaded","length","BASE_URL","API_KEY","axiosInstance","axios","baseURL","headers","params","api_key","get","fetchDataByID","path","pathURL","propTypes","PropTypes"],"sourceRoot":""}